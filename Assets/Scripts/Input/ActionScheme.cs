//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.5.1
//     from Assets/Scripts/ActionScheme.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @ActionScheme: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @ActionScheme()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""ActionScheme"",
    ""maps"": [
        {
            ""name"": ""Input"",
            ""id"": ""d237456f-003e-419d-ae1f-7bfed4997b83"",
            ""actions"": [
                {
                    ""name"": ""LeftButtonMouse"",
                    ""type"": ""Button"",
                    ""id"": ""dee41d97-864c-4c85-b644-e526bdc0448d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""RightButtonMouse"",
                    ""type"": ""Button"",
                    ""id"": ""65f0b82b-03ad-47de-b1f7-4da362b04a80"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ZoomCamera"",
                    ""type"": ""Value"",
                    ""id"": ""cc037ddd-bf80-4268-a451-bde22e26aa00"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""MovementCamera"",
                    ""type"": ""Value"",
                    ""id"": ""0354ede8-4a86-4397-8a85-93e0d9d76441"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""AccelerateCamera"",
                    ""type"": ""Button"",
                    ""id"": ""86d5470b-690d-4b2f-9f04-3d0b3e11d8c2"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""RotateCamera"",
                    ""type"": ""Value"",
                    ""id"": ""9ca15bb3-0bef-4960-b7db-a1dfd040ce14"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""AllowRotateCamera"",
                    ""type"": ""Button"",
                    ""id"": ""2ff2bc9a-22ae-4a30-a2a4-129f7c06d7e6"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""fa5181dc-c903-41f2-884f-26faafe16a94"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardAndMouse"",
                    ""action"": ""LeftButtonMouse"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""09afdcec-3d8f-4ee4-b70c-ae678b1d8ae7"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardAndMouse"",
                    ""action"": ""RightButtonMouse"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7c1eebb6-76f0-4956-8973-24e2d6b3cd8c"",
                    ""path"": ""<Mouse>/scroll"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardAndMouse"",
                    ""action"": ""ZoomCamera"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""39c8a18d-5b7c-4347-8f71-7c5cf56715b8"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MovementCamera"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""73c150b1-3cd3-4d45-8301-ef755efc9d28"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardAndMouse"",
                    ""action"": ""MovementCamera"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""753bd7c3-b0d0-46ed-8bb9-652a0afad23d"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardAndMouse"",
                    ""action"": ""MovementCamera"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""3bdc7a7b-1af2-4775-a158-a9163172a23e"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardAndMouse"",
                    ""action"": ""MovementCamera"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""10210116-87ba-4631-87ac-c587796e02d8"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardAndMouse"",
                    ""action"": ""MovementCamera"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""fdb282e9-76e9-4801-b39f-2103e193b68a"",
                    ""path"": ""<Keyboard>/leftShift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardAndMouse"",
                    ""action"": ""AccelerateCamera"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c977d1f2-5b69-4796-9665-2d0a79d5adc2"",
                    ""path"": ""<Keyboard>/leftAlt"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""AllowRotateCamera"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8e23cb54-90d1-44e2-b3a5-f313063053fb"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardAndMouse"",
                    ""action"": ""RotateCamera"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""KeyboardAndMouse"",
            ""bindingGroup"": ""KeyboardAndMouse"",
            ""devices"": [
                {
                    ""devicePath"": ""<Keyboard>"",
                    ""isOptional"": false,
                    ""isOR"": false
                },
                {
                    ""devicePath"": ""<Mouse>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        }
    ]
}");
        // Input
        m_Input = asset.FindActionMap("Input", throwIfNotFound: true);
        m_Input_LeftButtonMouse = m_Input.FindAction("LeftButtonMouse", throwIfNotFound: true);
        m_Input_RightButtonMouse = m_Input.FindAction("RightButtonMouse", throwIfNotFound: true);
        m_Input_ZoomCamera = m_Input.FindAction("ZoomCamera", throwIfNotFound: true);
        m_Input_MovementCamera = m_Input.FindAction("MovementCamera", throwIfNotFound: true);
        m_Input_AccelerateCamera = m_Input.FindAction("AccelerateCamera", throwIfNotFound: true);
        m_Input_RotateCamera = m_Input.FindAction("RotateCamera", throwIfNotFound: true);
        m_Input_AllowRotateCamera = m_Input.FindAction("AllowRotateCamera", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Input
    private readonly InputActionMap m_Input;
    private List<IInputActions> m_InputActionsCallbackInterfaces = new List<IInputActions>();
    private readonly InputAction m_Input_LeftButtonMouse;
    private readonly InputAction m_Input_RightButtonMouse;
    private readonly InputAction m_Input_ZoomCamera;
    private readonly InputAction m_Input_MovementCamera;
    private readonly InputAction m_Input_AccelerateCamera;
    private readonly InputAction m_Input_RotateCamera;
    private readonly InputAction m_Input_AllowRotateCamera;
    public struct InputActions
    {
        private @ActionScheme m_Wrapper;
        public InputActions(@ActionScheme wrapper) { m_Wrapper = wrapper; }
        public InputAction @LeftButtonMouse => m_Wrapper.m_Input_LeftButtonMouse;
        public InputAction @RightButtonMouse => m_Wrapper.m_Input_RightButtonMouse;
        public InputAction @ZoomCamera => m_Wrapper.m_Input_ZoomCamera;
        public InputAction @MovementCamera => m_Wrapper.m_Input_MovementCamera;
        public InputAction @AccelerateCamera => m_Wrapper.m_Input_AccelerateCamera;
        public InputAction @RotateCamera => m_Wrapper.m_Input_RotateCamera;
        public InputAction @AllowRotateCamera => m_Wrapper.m_Input_AllowRotateCamera;
        public InputActionMap Get() { return m_Wrapper.m_Input; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(InputActions set) { return set.Get(); }
        public void AddCallbacks(IInputActions instance)
        {
            if (instance == null || m_Wrapper.m_InputActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_InputActionsCallbackInterfaces.Add(instance);
            @LeftButtonMouse.started += instance.OnLeftButtonMouse;
            @LeftButtonMouse.performed += instance.OnLeftButtonMouse;
            @LeftButtonMouse.canceled += instance.OnLeftButtonMouse;
            @RightButtonMouse.started += instance.OnRightButtonMouse;
            @RightButtonMouse.performed += instance.OnRightButtonMouse;
            @RightButtonMouse.canceled += instance.OnRightButtonMouse;
            @ZoomCamera.started += instance.OnZoomCamera;
            @ZoomCamera.performed += instance.OnZoomCamera;
            @ZoomCamera.canceled += instance.OnZoomCamera;
            @MovementCamera.started += instance.OnMovementCamera;
            @MovementCamera.performed += instance.OnMovementCamera;
            @MovementCamera.canceled += instance.OnMovementCamera;
            @AccelerateCamera.started += instance.OnAccelerateCamera;
            @AccelerateCamera.performed += instance.OnAccelerateCamera;
            @AccelerateCamera.canceled += instance.OnAccelerateCamera;
            @RotateCamera.started += instance.OnRotateCamera;
            @RotateCamera.performed += instance.OnRotateCamera;
            @RotateCamera.canceled += instance.OnRotateCamera;
            @AllowRotateCamera.started += instance.OnAllowRotateCamera;
            @AllowRotateCamera.performed += instance.OnAllowRotateCamera;
            @AllowRotateCamera.canceled += instance.OnAllowRotateCamera;
        }

        private void UnregisterCallbacks(IInputActions instance)
        {
            @LeftButtonMouse.started -= instance.OnLeftButtonMouse;
            @LeftButtonMouse.performed -= instance.OnLeftButtonMouse;
            @LeftButtonMouse.canceled -= instance.OnLeftButtonMouse;
            @RightButtonMouse.started -= instance.OnRightButtonMouse;
            @RightButtonMouse.performed -= instance.OnRightButtonMouse;
            @RightButtonMouse.canceled -= instance.OnRightButtonMouse;
            @ZoomCamera.started -= instance.OnZoomCamera;
            @ZoomCamera.performed -= instance.OnZoomCamera;
            @ZoomCamera.canceled -= instance.OnZoomCamera;
            @MovementCamera.started -= instance.OnMovementCamera;
            @MovementCamera.performed -= instance.OnMovementCamera;
            @MovementCamera.canceled -= instance.OnMovementCamera;
            @AccelerateCamera.started -= instance.OnAccelerateCamera;
            @AccelerateCamera.performed -= instance.OnAccelerateCamera;
            @AccelerateCamera.canceled -= instance.OnAccelerateCamera;
            @RotateCamera.started -= instance.OnRotateCamera;
            @RotateCamera.performed -= instance.OnRotateCamera;
            @RotateCamera.canceled -= instance.OnRotateCamera;
            @AllowRotateCamera.started -= instance.OnAllowRotateCamera;
            @AllowRotateCamera.performed -= instance.OnAllowRotateCamera;
            @AllowRotateCamera.canceled -= instance.OnAllowRotateCamera;
        }

        public void RemoveCallbacks(IInputActions instance)
        {
            if (m_Wrapper.m_InputActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IInputActions instance)
        {
            foreach (var item in m_Wrapper.m_InputActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_InputActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public InputActions @Input => new InputActions(this);
    private int m_KeyboardAndMouseSchemeIndex = -1;
    public InputControlScheme KeyboardAndMouseScheme
    {
        get
        {
            if (m_KeyboardAndMouseSchemeIndex == -1) m_KeyboardAndMouseSchemeIndex = asset.FindControlSchemeIndex("KeyboardAndMouse");
            return asset.controlSchemes[m_KeyboardAndMouseSchemeIndex];
        }
    }
    public interface IInputActions
    {
        void OnLeftButtonMouse(InputAction.CallbackContext context);
        void OnRightButtonMouse(InputAction.CallbackContext context);
        void OnZoomCamera(InputAction.CallbackContext context);
        void OnMovementCamera(InputAction.CallbackContext context);
        void OnAccelerateCamera(InputAction.CallbackContext context);
        void OnRotateCamera(InputAction.CallbackContext context);
        void OnAllowRotateCamera(InputAction.CallbackContext context);
    }
}
